---
benchmark_type: k8s
categories:
-
  name: Control Plane Components
  sub_category:
    name: 3.0 Worker Nodes
    audit_tests:
    - name: 3.1.1 Ensure that the proxy kubeconfig file permissions are set to 644 or
        more restrictive (Scored)
      description: |-
        If kube-proxy is running, and if it is using a file-based kubeconfig file, ensure that the proxy
        kubeconfig file has permissions of 644 or more restrictive.
      profile_applicability: Master
      audit:
      - ps -ef | grep kube-proxy |grep 'kubeconfig' | grep -o 'kubeconfig=[^"]\S*'
        | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      - 'stat -c %a ${0}'
      remediation: Run the below command (based on the file location on your system) on the each worker
        node. For example,
        chmod 644 <proxy kubeconfig file>
      check_type: multi_param
      impact: None
      eval_expr: "${1} <= 644;"
      default_value: See the GKE documentation for the default value.
      references:
      - https://kubernetes.io/docs/admin/kube-proxy/
      - https://cloud.google.com/kubernetes-engine/docs/concepts/cis-benchmarks
    - name: 3.1.2 Ensure that the proxy kubeconfig file ownership is set to root:root
      description: |-
        If kube-proxy is running, ensure that the file ownership of its kubeconfig file is set to
        root:root.
      profile_applicability: Master
      audit:
      - ps -ef | grep kube-proxy |grep 'kubeconfig' | grep -o 'kubeconfig=[^"]\S*' | awk -F "=" '{print $2}' | awk 'FNR <= 1'
      - 'stat -c %U:%G ${0}'
      remediation: Run the below command (based on the file location on your system) on the each worker
        node. For example,
        chown root:root <proxy kubeconfig file>
      check_type: multi_param
      impact: None
      eval_expr: "'${1}' == 'root:root';"
      default_value: See the GKE documentation for the default value.
      references:
      - hthttps://kubernetes.io/docs/admin/kube-proxy/
      - https://cloud.google.com/kubernetes-engine/docs/concepts/cis-benchmarks
    - name: 3.1.3 Ensure that the kubelet configuration file has permissions set to 644 or more restrictive (Scored)
      description: |-
        Ensure that if the kubelet refers to a configuration file with the --config argument, that file
        has permissions of 644 or more restrictive.
      profile_applicability: Master
      audit:
      - ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^"]\S*' | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      - 'stat -c %a ${0}'
      remediation: Run the following command (using the config file location identied in the Audit step)
        chmod 644 /var/lib/kubelet/config.yaml
      check_type: multi_param
      impact: None
      eval_expr: "${1} <= 644;"
      default_value: See the GKE documentation for the default value.
      references:
      - https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/
      - https://cloud.google.com/kubernetes-engine/docs/concepts/cis-benchmarks
    - name: 3.1.4 Ensure that the kubelet configuration file ownership is set to
        root:root (Scored)
      description: |-
        Ensure that if the kubelet refers to a configuration file with the --config argument, that file
        is owned by root:root.
      profile_applicability: Master
      audit:
      - ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^"]\S*' | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      - 'stat -c %U:%G ${0}'
      remediation: Run the following command (using the config file location identied in the Audit step)
        chown root:root /etc/kubernetes/kubelet.conf
      check_type: multi_param
      impact: None
      eval_expr: "'${1}' == 'root:root';"
      default_value: See the GKE documentation for the default value.
      references:
      - https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/
      - https://cloud.google.com/kubernetes-engine/docs/concepts/cis-benchmarks
    - name: 3.2.1 Ensure that the --anonymous-auth argument is set to false (Scored)
      description: |-
        Disable anonymous requests to the Kubelet server.
      profile_applicability: Master
      audit:
        - ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^"]\S*' | awk -F "=" '{print $2}' |awk 'FNR <= 1'
        - 'grep -A5 ''authentication'' ${0} | grep -A1 ''anonymous''| grep  -o ''enabled:[^"]\S*''| awk -F ":" ''{print $2}'' |awk ''FNR <= 1'''
        - ps -ef | grep kubelet |grep ' --anonymous-auth' | grep -o ' --anonymous-auth=[^"]\S*' | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      remediation: If using a Kubelet config file, edit the file to set authentication anonymous enabled to false.\n If using executable arguments, edit the kubelet service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each worker node and set the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.
      check_type: multi_param
      impact: Anonymous requests will be rejected.
      eval_expr: "'${1}' == 'false'; || '${1}' == 'false';"
      default_value: See the GKE documentation for the default value.
      references:
      - https://kubernetes.io/docs/admin/kubelet/
      - https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubeletauthentication
    - name: 3.2.2 Ensure that the --authorization-mode argument is not set to AlwaysAllow (Scored)
      description: Do not allow all requests. Enable explicit authorization.
      profile_applicability: Worker
      audit:
      - ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^"]\S*' | awk
        -F "=" '{print $2}' |awk 'FNR <= 1'
      - ' grep -A5 ''authorization'' ${0} | grep  ''mode:[^"]\S*''| awk -F ":" ''{print
            $2}'' |awk ''FNR <= 1'''
      - ps -ef | grep kubelet |grep ' --authorization-mode' | grep -o ' --authorization-mode=[^"]\S*'
        | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      remediation: |-
        If using a Kubelet config file, edit the file to set authorization: mode to Webhook.
        If using executable arguments, edit the kubelet service file
        /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each worker node and
        set the below parameter in KUBELET_AUTHZ_ARGS variable.
        --authorization-mode=Webhook
      check_type: multi_param
      impact: Unauthorized requests will be denied.
      eval_expr: "'${1}' != 'AlwaysAllow'; && '${1}' != 'AlwaysAllow';"
      default_value: See the GKE documentation for the default value.
      references:
      - https://kubernetes.io/docs/admin/kubelet/
      - https://kubernetes.io/docs/admin/kubelet-authentication-authorization/#kubeletauthentication
    - name: 3.2.3 Ensure that the --client-ca-file argument is set as appropriate (Scored)
      description: Enable Kubelet authentication using certificates.
      profile_applicability: Worker
      audit:
      - ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^"]\S*' | awk
        -F "=" '{print $2}' |awk 'FNR <= 1'
      - ' grep -A10 ''authentication'' ${0} |grep -A1 ''x509'' |grep ''clientCAFile:[^"]\S*''|
            awk -F ":" ''{print $2}'' |awk ''FNR <= 1'''
      - ps -ef | grep kubelet |grep ' --client-ca-file' | grep -o ' --client-ca-file=[^"]\S*'
        | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      remediation: |-
        If using a Kubelet config file, edit the file to set authentication: x509: clientCAFile to the location of the client CA file.
        If using command line arguments, edit the kubelet service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each worker node and set the below parameter in KUBELET_AUTHZ_ARGS variable.
        --client-ca-file=<path/to/client-ca-file>
      check_type: multi_param
      impact: You require TLS to be configured on apiserver as well as kubelets.
      eval_expr: "'${1}' != ''; || '${1}' != '';"
      default_value: See the GKE documentation for the default value.
      references:
      - https://kubernetes.io/docs/admin/kubelet/
      - https://kubernetes.io/docs/reference/command-line-tools-reference/kubeletauthentication-authorization/
    - name: 3.2.4 Ensure that the --read-only-port argument is set to 0 (Scored)
      description: Disable the read-only port.
      profile_applicability: Worker
      audit:
      - ps -ef | grep kubelet |grep ' --read-only-port' | grep -o ' --read-only-port=[^"]\S*'
        | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      - ' grep ''readOnlyPort'' ${0} |grep ''readOnlyPort:[^"]\S*''| awk -F ":"
           ''{print $2}'' |awk ''FNR <= 1'''
      remediation: |-
        If using a Kubelet config file, edit the file to set readOnlyPort to 0.
        If using command line arguments, edit the kubelet service file
        /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each worker node and
        set the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.
        --read-only-port=0
      check_type: multi_param
      impact: Removal of the read-only port will require that any service which made
        use of it will need to be re-configured to use the main Kubelet API.
      eval_expr: "'${0}' != ''; || '${1}' == '0';"
      default_value: See the GKE documentation for the default value.
      references:
      - https://kubernetes.io/docs/admin/kubelet/
    - name: 3.2.5 Ensure that the --streaming-connection-idle-timeout argument is not set to 0 (Scored)
      description: Do not disable timeouts on streaming connections.
      profile_applicability: Worker
      audit:
      - ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^"]\S*' | awk
        -F "=" '{print $2}' |awk 'FNR <= 1'
      - ' grep ''streamingConnectionIdleTimeout'' ${0} |grep ''streamingConnectionIdleTimeout:[^"]\S*''|
            awk -F ":" ''{print $2}'' |awk ''FNR <= 1'''
      - ps -ef | grep kubelet |grep ' --streamingConnectionIdleTimeout' | grep -o
        ' --streamingConnectionIdleTimeout=[^"]\S*' | awk -F "=" '{print $2}' |awk
        'FNR <= 1'
      remediation: |-
        If using a Kubelet config file, edit the file to set streamingConnectionIdleTimeout to a value other than 0.
        If using command line arguments, edit the kubelet service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each worker node and set the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.
        --streaming-connection-idle-timeout=5m
      check_type: multi_param
      impact: Long-lived connections could be interrupted.
      eval_expr: "'${1}' != '0'; && '${1}' != '0s';"
      default_value: See the GKE documentation for the default value.
      references:
      - https://kubernetes.io/docs/admin/kubelet/
      - https://github.com/kubernetes/kubernetes/pull/18552
    - name: 3.2.6 Ensure that the --protect-kernel-defaults argument is set to true (Scored)
      description: Protect tuned kernel parameters from overriding kubelet default
        kernel parameter values.
      profile_applicability: Worker
      audit:
      - ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^"]\S*' | awk
        -F "=" '{print $2}' |awk 'FNR <= 1'
      - ' grep ''protectKernelDefaults'' ${0} |grep ''protectKernelDefaults:[^"]\S*''|
            awk -F ":" ''{print $2}'' |awk ''FNR <= 1'''
      - ps -ef | grep kubelet |grep ' --protect-kernel-defaults' | grep -o ' --protect-kernel-defaults=[^"]\S*'
        | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      remediation: |-
        If using a Kubelet config file, edit the file to set protectKernelDefaults: true.
        If using command line arguments, edit the kubelet service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each worker node and set the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.
        --protect-kernel-defaults=true
      check_type: multi_param
      impact: You would have to re-tune kernel parameters to match kubelet parameters.
      eval_expr: "'${1}' == 'true'; || '${1}' == 'true';"
      default_value: See the GKE documentation for the default value.
      references:
      - https://kubernetes.io/docs/admin/kubelet/
    - name: 3.2.7 Ensure that the --make-iptables-util-chains argument is set to true   (Scored)
      description: Allow Kubelet to manage iptables.
      profile_applicability: Worker
      audit:
      - ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^"]\S*' | awk
        -F "=" '{print $2}' |awk 'FNR <= 1'
      - ' grep ''makeIPTablesUtilChains'' ${0} |grep ''makeIPTablesUtilChains:[^"]\S*''|
            awk -F ":" ''{print $2}'' |awk ''FNR <= 1'''
      - ps -ef | grep kubelet |grep ' --make-iptables-util-chains' | grep -o ' --make-iptables-util-chains=[^"]\S*'
        | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      remediation: |-
        If using a Kubelet config file, edit the file to set makeIPTablesUtilChains: true.
        If using command line arguments, edit the kubelet service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each worker node and remove the --make-iptables-util-chains argument from the KUBELET_SYSTEM_PODS_ARGS variable.
      check_type: multi_param
      impact: Kubelet would manage the iptables on the system and keep it in sync.
        If you are using any other iptables management solution, then there might
        be some conflicts
      eval_expr: "('${1}' != 'false'; && '${1}' == ''; ) || '${1}' == 'true';"
      default_value: See the GKE documentation for the default value.
      references:
      - https://kubernetes.io/docs/admin/kubelet/
    - name: 3.2.8 Ensure that the --hostname-override argument is not set (Scored)
      description: Do not override node hostnames.
      profile_applicability: Worker
      audit:
      - ps -ef | grep kubelet |grep ' --hostname-override' | grep -o ' --hostname-override=[^"]\S*'
        | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      remediation: Edit the kubelet service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        on each worker node and remove the --hostname-override argument from the KUBELET_SYSTEM_PODS_ARGS
        variable.
      check_type: multi_param
      impact: Some cloud providers may require this flag to ensure that hostname matches
        names issued by the cloud provider. In these environments, this recommendation
        should not apply.
      eval_expr: "'${0}' == '';"
      default_value: See the GKE documentation for the default value.
      references:
      - https://kubernetes.io/docs/admin/kubelet/
    - name: 3.2.9 Ensure that the --event-qps argument is set to 0 or a level which
        ensures appropriate event capture (Scored)
      description: Security relevant information should be captured. The --event-qps
        flag on the Kubelet can be used to limit the rate at which events are gathered.
        Setting this too low could result in relevant events not being logged, however
        the unlimited setting of 0 could result in a denial of service on the kubelet.
      profile_applicability: Worker
      audit:
      - ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^"]\S*' | awk
        -F "=" '{print $2}' |awk 'FNR <= 1'
      - ' grep ''event-qps'' ${0} |grep ''event-qps:[^"]\S*''| awk -F ":" ''{print
            $2}'' |awk ''FNR <= 1'''
      - ps -ef | grep kubelet |grep ' --event-qps' | grep -o ' --event-qps=[^"]\S*'
        | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      remediation: 'If using a Kubelet config file, edit the file to set eventRecordQPS:
            to an appropriate level. If using command line arguments, edit the kubelet
            service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each
            worker node and set the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.'
      check_type: multi_param
      impact: Setting this parameter to 0 could result in a denial of service condition
        due to excessive events being created. The cluster's event processing and
        storage systems should be scaled to handle expected event loads.
      eval_expr: "('${1}' != '0'; && '${1}' == ''; ) || '${1}' != '0';"
      default_value: See the GKE documentation for the default value.
      references:
      - https://kubernetes.io/docs/admin/kubelet/
      - https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/apis/kubeletconfig/v1beta1/types.go
    - name: 3.2.10 Ensure that the --tls-cert-file and --tls-private-key-file arguments
        are set as appropriate (Scored)
      description: Setup TLS connection on the Kubelets.
      profile_applicability: Worker
      audit:
      - ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^"]\S*' | awk
        -F "=" '{print $2}' |awk 'FNR <= 1'
      - ' grep ''tlsCertFile'' ${0} |grep ''tlsCertFile:[^"]\S*''| awk -F ":" ''{print
            $2}'' |awk ''FNR <= 1'''
      - ' grep ''tlsPrivateKeyFile'' ${0} |grep ''tlsPrivateKeyFile:[^"]\S*''| awk
            -F ":" ''{print $2}'' |awk ''FNR <= 1'''
      - ps -ef | grep kubelet |grep ' --tls-cert-file' | grep -o ' --tls-cert-file=[^"]\S*'
        | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      - ps -ef | grep kubelet |grep ' --tls-private-key-file' | grep -o ' --tls-private-key-file=[^"]\S*'
        | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      remediation: |-
        If using a Kubelet config file, edit the file to set tlsCertFile to the location of the certificate file to use to identify this Kubelet, and tlsPrivateKeyFile to the location of the corresponding private key file.
        If using command line arguments, edit the kubelet service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each worker node and set the below parameters in KUBELET_CERTIFICATE_ARGS variable. --tls-cert-file=<path/to/tls-certificate-file> --tls-private-key-file=<path/to/tls-key-file>
      check_type: multi_param
      impact: TLS and client certificate authentication must be configured for your Kubernetes cluster
        deployment.
      eval_expr: "('${1}' != ''; && '${1}' != '';) || ('${3}' != ''; && '${4}' != '';)"
      default_value: See the GKE documentation for the default value.
      references:
      - https://kubernetes.io/docs/admin/kubelet/
      - http://rootsquash.com/2016/05/10/securing-the-kubernetes-api/
      - https://github.com/kelseyhightower/docker-kubernetes-tls-guide
      - https://jvns.ca/blog/2017/08/05/how-kubernetes-certificates-work/
    - name: 3.2.11 Ensure that the --rotate-certificates argument is not set to false (Scored)
      description: Enable kubelet client certificate rotation.
      profile_applicability: Worker
      audit:
      - ps -ef | grep kubelet |grep ' --config' | grep -o ' --config=[^"]\S*' | awk
        -F "=" '{print $2}' |awk 'FNR <= 1'
      - ' grep ''rotateCertificates'' ${0} |grep ''rotateCertificates:[^"]\S*''|
             awk -F ":" ''{print $2}'' |awk ''FNR <= 1'''
      - ps -ef | grep kubelet |grep ' --rotate-certificates' | grep -o ' --rotate-certificates=[^"]\S*'
        | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      remediation: |-
        If using a Kubelet config file, edit the file to add the line rotateCertificates: true or remove it altogether to use the default value.
        If using command line arguments, edit the kubelet service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each worker node and remove --rotate-certificates=false argument from the KUBELET_CERTIFICATE_ARGS
         209 | P a g e
        variable.
      check_type: multi_param
      impact: None
      eval_expr: "('${1}' == ''; || '${1}' == 'true'; ) || '${1}' == 'true';"
      default_value: See the GKE documentation for the default value.
      references:
      - https://github.com/kubernetes/kubernetes/pull/41912
      - https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tlsbootstrapping/#
        kubelet-configuration
      - https://kubernetes.io/docs/imported/release/notes/
      - https://kubernetes.io/docs/reference/command-line-tools-reference/featuregates/
    - name: 3.2.12 Ensure that the RotateKubeletServerCertificate argument is set
        to true (Scored)
      description: Enable kubelet server certificate rotation.
      profile_applicability: Worker
      audit:
      - ps -ef | grep kubelet |grep 'RotateKubeletServerCertificate' | grep -o 'RotateKubeletServerCertificate=[^"]\S*'
        | awk -F "=" '{print $2}' |awk 'FNR <= 1'
      remediation: |-
        Edit the kubelet service file /etc/systemd/system/kubelet.service.d/10-kubeadm.conf on each worker node and set the below parameter in KUBELET_CERTIFICATE_ARGS variable.
        --feature-gates=RotateKubeletServerCertificate=true
      check_type: multi_param
      impact: None
      eval_expr: "'${0}' == 'true';"
      default_value: See the GKE documentation for the default value.
      references:
      - https://github.com/kubernetes/kubernetes/pull/45059
      - https://kubernetes.io/docs/admin/kubelet-tls-bootstrapping/#kubelet-configuration