---
benchmark_type: k8s
categories:
  - name: Control Plane Components
    sub_category:
      name: 2.0 etcd
      audit_tests:
        - name: 2.1 Ensure that the --cert-file and --key-file arguments are set as appropriate
          description: Configure TLS encryption for the etcd service.
          profile_applicability: Master
          audit:
            - ps -ef | grep etcd |grep ' --cert-file' | grep -o ' --cert-file=[^"]\S*' | awk -F
              "=" '{print $2}' |awk 'FNR <= 1'
            -  awk -v FS="--cert-file=" 'NF>1{print $2}' /etc/kubernetes/manifests/etcd.yaml
            - ps -ef | grep etcd |grep ' --key-file' | grep -o ' --key-file=[^"]\S*' | awk -F
              "=" '{print $2}' |awk 'FNR <= 1'
            -  awk -v FS="--key-file=" 'NF>1{print $2}' /etc/kubernetes/manifests/etcd.yaml
          remediation: |-
            Follow the etcd service documentation and configure TLS encryption.
            Then, edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameters. --cert-file=</path/to/ca-file> --key-file=</path/to/key-file>
          check_type: multi_param
          impact: Client connections only over TLS would be served.
          eval_expr: "'${0}' == '1'; && '${2}' == '${3}';"
          default_value: By default, TLS encryption is not set.
          references:
            - https://coreos.com/etcd/docs/latest/op-guide/security.html
            - https://kubernetes.io/docs/admin/etcd/
        - name: 2.2 Ensure that the --client-cert-auth argument is set to true
          description: Enable client authentication on etcd service.
          profile_applicability: Master
          audit:
            - ps -ef | grep etcd |grep ' --client-cert-auth' | grep -o ' --client-cert-auth=[^"]\S*'
              | awk -F "=" '{print $2}' |awk 'FNR <= 1'
            -  awk -v FS="--client-cert-auth=" 'NF>1{print $2}' /etc/kubernetes/manifests/etcd.yaml
          remediation: |-
            Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameter.
            --client-cert-auth="true"
          check_type: multi_param
          impact: All clients attempting to access the etcd server will require a valid
            client certificate.
          eval_expr: "'${0}' == 'true'; && '${0}' == '${1}';"
          default_value: By default, the etcd service can be queried by unauthenticated
            clients.
          references:
            - https://coreos.com/etcd/docs/latest/op-guide/security.html
            - https://kubernetes.io/docs/admin/etcd/
        - name: 2.3 Ensure that the --auto-tls argument is not set to true
          description: Do not use self-signed certificates for TLS.
          profile_applicability: Master
          audit:
            - ps -ef | grep etcd |grep ' --auto-tls' | grep -o ' --auto-tls=[^"]\S*' | awk -F
              "=" '{print $2}' |awk 'FNR <= 1'
            -  awk -v FS="--auto-tls=" 'NF>1{print $2}' /etc/kubernetes/manifests/etcd.yaml
          remediation: |-
            Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and either remove the --auto-tls parameter or set it to false.
            --auto-tls=false
          check_type: multi_param
          impact: Clients will not be able to use self-signed certificates for TLS.
          eval_expr: "'${0}' == 'true'; && '${0}' == '${1}';"
          default_value: By default, --auto-tls is set to false.
          references:
            - https://coreos.com/etcd/docs/latest/op-guide/security.html
            - https://kubernetes.io/docs/admin/etcd/
            - https://coreos.com/etcd/docs/latest/op-guide/configuration.html#auto-tls
        - name: 2.4 Ensure that the --peer-cert-file and --peer-key-file arguments are
            set as appropriate
          description: etcd should be configured to make use of TLS encryption for peer
            connections.
          profile_applicability: Master
          audit:
            - ps -ef | grep etcd |grep ' --peer-cert-file' | grep -o ' --peer-cert-file=[^"]\S*'
              | awk -F "=" '{print $2}' |awk 'FNR <= 1'
            -  awk -v FS="--peer-cert-file=" 'NF>1{print $2}' /etc/kubernetes/manifests/etcd.yaml
            - ps -ef | grep etcd |grep ' --peer-key-file' | grep -o ' --peer-key-file=[^"]\S*'
              | awk -F "=" '{print $2}' |awk 'FNR <= 1'
            -  awk -v FS="--peer-key-file=" 'NF>1{print $2}' /etc/kubernetes/manifests/etcd.yaml
          remediation: |-
            Follow the etcd service documentation and configure peer TLS encryption as appropriate for your etcd cluster.
            Then, edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameters. --peer-client-file=</path/to/peer-cert-file> --peer-key-file=</path/to/peer-key-file>
          check_type: multi_param
          impact: etcd cluster peers would need to set up TLS for their communication.
          eval_expr: "'${0}' == '${1}'; && '${2}' == '${3}';"
          default_value: "Note: This recommendation is applicable only for etcd clusters.
        If you are using only one\netcd server in your environment then this recommendation
        is not applicable.\n  --peer-client-file=</path/to/peer-cert-file> --peer-key-file=</path/to/peer-key-file>\n
        \ \nBy default, peer communication over TLS is not configured."
          references:
            - https://coreos.com/etcd/docs/latest/op-guide/security.html
            - https://kubernetes.io/docs/admin/etcd/
        - name: 2.5 Ensure that the --peer-client-cert-auth argument is set to true
          description: etcd should be configured for peer authentication.
          profile_applicability: Master
          audit:
            - ps -ef | grep etcd |grep ' --peer-client-cert-auth' | grep -o ' --peer-client-cert-auth=[^"]\S*'
              | awk -F "=" '{print $2}' |awk 'FNR <= 1'
            -  awk -v FS="--peer-client-cert-auth=" 'NF>1{print $2}' /etc/kubernetes/manifests/etcd.yaml
          remediation: |-
            Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameter.
            --peer-client-cert-auth=true
          check_type: multi_param
          impact: All peers attempting to communicate with the etcd server will require
            a valid client certificate for authentication.
          eval_expr: "'${0}' == 'true'; && '${0}' == '${1}';"
          default_value: |-
            Note: This recommendation is applicable only for etcd clusters. If you are using only one
            etcd server in your environment then this recommendation is not applicable. By default, --peer-client-cert-auth argument is set to false.
          references:
            - https://coreos.com/etcd/docs/latest/op-guide/security.html
            - https://kubernetes.io/docs/admin/etcd/
            - https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-client-cert-auth
        - name: 2.6 Ensure that the --peer-auto-tls argument is not set to true
          description: Do not use automatically generated self-signed certificates for
            TLS connections between peers.
          profile_applicability: Master
          audit:
            - ps -ef | grep etcd |grep ' --peer-auto-tls' | grep -o ' --peer-auto-tls=[^"]\S*'
              | awk -F "=" '{print $2}' |awk 'FNR <= 1'
            -  awk -v FS="--peer-auto-tls=" 'NF>1{print $2}' /etc/kubernetes/manifests/etcd.yaml
          remediation: |-
            Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and either remove the --peer-auto-tls parameter or set it to false.
            --peer-auto-tls=false
          check_type: multi_param
          impact: All peers attempting to communicate with the etcd server will require
            a valid client certificate for authentication.
          eval_expr: "'${0}' == 'true'; && '${0}' == '${1}';"
          default_value: |-
            Note: This recommendation is applicable only for etcd clusters. If you are using only one etcd server in your environment then this recommendation is not applicable.
            By default, --peer-auto-tls argument is set to false.
          references:
            - https://coreos.com/etcd/docs/latest/op-guide/security.html
            - https://kubernetes.io/docs/admin/etcd/
            - https://coreos.com/etcd/docs/latest/op-guide/configuration.html#peer-auto-tls
        - name: 2.7 Ensure that a unique Certificate Authority is used for etcd
          description: Use a different certificate authority for etcd from the one used
            for Kubernetes.
          profile_applicability: Master
          audit:
            - ps -ef | grep etcd |grep ' --trusted-ca-file' | grep -o ' --trusted-ca-file=[^"]\S*'
              | awk -F "=" '{print $2}' |awk 'FNR <= 1'
            -  awk -v FS="--trusted-ca-file=" 'NF>1{print $2}' /etc/kubernetes/manifests/etcd.yaml
            - ps -ef | grep apiserver |grep ' --client-ca-file' | grep -o ' --client-ca-file=[^"]\S*'
              | awk -F "=" '{print $2}' |awk 'FNR <= 1'
          remediation: |-
            Follow the etcd documentation and create a dedicated certificate authority setup for the etcd service.
            Then, edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameter.
             --trusted-ca-file=</path/to/ca-file>
          check_type: multi_param
          impact: Additional management of the certificates and keys for the dedicated
            certificate authority will be required.
          eval_expr: "'${0}' != ''; && '${0}' == '${1}'; && '${0}' != '${2}';"
          default_value: By default, no etcd certificate is created and used.
          references:
            - https://coreos.com/etcd/docs/latest/op-guide/security.html
